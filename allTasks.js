/*Задание 1.
В прошлом модуле в разделе «Циклы» вы выполняли следующее задание:

Дан массив. Нужно вывести в консоль количество чётных и нечётных элементов в массиве. Если в массиве есть нулевой элемент, то он учитывается и выводится отдельно. 

При выполнении задания необходимо учесть, что массив может содержать не только числа, но и, например, знаки, null и так далее.

На этот раз оформите решение в виде функции, постарайтесь дать этой функции корректное название, вызовите функцию, проанализируйте синтаксис.
 */

console.log("Задание 1");
let arr7 = [0, 1, 3, "string", null, undefined, 2, "2", 4, 6, NaN, 11, 1, 0];
let evenCount = 0;
let oddCount = 0;

console.log(`Исходный массив:`);
console.log(arr7);

function getEvenOddCount(arr) {
  arr.forEach((item, idx) => {
    if (typeof item === "number" && item !== 0 && !isNaN(item)) {
      item % 2 === 0 ? evenCount++ : oddCount++;
    } else if (item === 0) console.log(`Элемент равен: 0. Индекс: ${idx}`);
  });
}

getEvenOddCount(arr7);
console.log(`Количество четных элементов: ${evenCount}`);
console.log(`Количество нечетных элементов: ${oddCount}`);
console.log("______________________________________________________");

// ===================================================================================================================================================================
/*Задание 2.
Написать функцию, которая принимает на входе любое число (но не больше 1 000), определяет, является ли оно простым, и выводит простое число или нет. 
Если введено больше 1 000, то выводится сообщение, что данные неверны. Обратите внимание на числа 0 и 1.
Здесь вам пригодятся знания из предыдущего модуля — циклы и условные операторы. */

console.log("Задание 2");
function primeNumber(num) {
  let prime = true;
  if (num >= 1000) return "данные неверны";
  else if (num > 1) {
    for (let i = 2; i <= num / 2; i++) {
      if (num % i === 0) {
        prime = false;
      }
    }
  }
  if (prime) return `число ${num} простое`;
  return `число ${num} составное`;
}
console.log(primeNumber(999));
console.log(primeNumber(4));
console.log("______________________________________________________");

// ===================================================================================================================================================================
/*Задание 3.
Написать функцию, которая принимает число как аргумент и возвращает функцию, 
которая также принимает число как аргумент и возвращает сумму этих двух чисел. Выведите в консоль результат. */

console.log("Задание 3");
function firstNum(num1) {
  return function (num2) {
    return num1 + num2;
  };
}

const sum = firstNum(10);
const result = sum(25);
console.log(result);
console.log("______________________________________________________");

// ===================================================================================================================================================================
/**Задание 4.

Напишите функцию, которая принимает два числа. Каждую секунду необходимо выводить в консоль, начиная от первого и заканчивая вторым. Используйте setInterval.
Например, пользователь ввёл числа 5 и 15. Каждую секунду в консоль должно печататься число, начиная с 5 и заканчивая 15 (всего 11 чисел: 5 6 7 8 9 10 11 12 13 14 15). */

console.log("Задание 4");
const a = +prompt("Введите первое число: ");
const b = +prompt("Введите второе число: ");

function printInterval(a, b) {
  if (typeof a !== "number" || typeof b !== "number" || isNaN(a) || isNaN(b)) {
    clearInterval(timerID);
    console.log("Данные не верные, попробуйте еще раз.");
  } else for (let i = a; i <= b; i++) console.log(i);
}

const timerID = setInterval(printInterval, 1000, a, b);
setTimeout(() => {
  clearInterval(timerID);
}, 2000);
console.log("______________________________________________________");

// ===================================================================================================================================================================

/**Задание 5.

Напишите функцию, которая принимает два натуральных числа x и n и возвращает x в степени n. Иначе говоря, умножает x на себя n раз и возвращает результат.
Используйте Arrow Function синтаксис. */
console.log("Задание 5");
const pow = (x, n) => Math.pow(x, n);
const res = pow(9, 3);
console.log(res);
